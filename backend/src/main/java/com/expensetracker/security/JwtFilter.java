package com.expensetracker.security;\n\nimport com.expensetracker.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport jakarta.servlet.FilterChain;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n@Component\npublic class JwtFilter extends OncePerRequestFilter {\n\n    @Autowired\n    private JwtUtil jwtUtil;\n    @Autowired\n    private UserService userService;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)\n            throws ServletException, IOException {\n        final String authHeader = request.getHeader("Authorization");\n        String username = null;\n        String jwt = null;\n        if (authHeader != null && authHeader.startsWith("Bearer ")) {\n            jwt = authHeader.substring(7);\n            username = jwtUtil.extractUsername(jwt);\n        }\n        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n            UserDetails userDetails = org.springframework.security.core.userdetails.User.withUsername(username)\n                    .password("") // password not checked here\n                    .authorities("USER")\n                    .build();\n            UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(\n                    userDetails, null, userDetails.getAuthorities());\n            authToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n            SecurityContextHolder.getContext().setAuthentication(authToken);\n        }\n        chain.doFilter(request, response);\n    }\n}\n